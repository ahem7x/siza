{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nlet LoginComponent = class LoginComponent {\n  constructor(_service, router, route, snackBar) {\n    this._service = _service;\n    this.router = router;\n    this.route = route;\n    this.snackBar = snackBar;\n    this.username = null;\n    this.password = null;\n    this.sourceRoute = '1';\n    this.sourceRoute = this.route.snapshot.paramMap.get('type');\n  }\n  ngOnInit() {\n    // if user is set, populate it\n    this.username = this.route.snapshot.params['user'];\n  }\n  showError(errorMessage) {\n    this.snackBar.open(errorMessage, 'RETRY', {\n      duration: 2000\n    });\n  }\n  login() {\n    this._service.login(this.username, this.password, this.sourceRoute).subscribe(data => {\n      this._service.createUserDetails(data);\n      const userdata = JSON.parse(localStorage.getItem('userdata')) || null;\n      localStorage.setItem('userdata', JSON.stringify(userdata));\n      if (this._service.role === 'ADMIN') {\n        this.router.navigate(['home/admin'], {\n          relativeTo: this.route.parent\n        });\n      } else {\n        this.router.navigate(['home'], {\n          relativeTo: this.route.parent\n        });\n      }\n    }, err => {\n      console.log('Error ', err);\n      this.showError('Invalid credentials provided!');\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n}), __metadata(\"design:paramtypes\", [UserService, Router, ActivatedRoute, typeof (_a = typeof MatSnackBar !== \"undefined\" && MatSnackBar) === \"function\" ? _a : Object])], LoginComponent);\nexport { LoginComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}