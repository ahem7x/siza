{"ast":null,"code":"import { UserService } from '../services/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(_service, router, route, snackBar) {\n      this._service = _service;\n      this.router = router;\n      this.route = route;\n      this.snackBar = snackBar;\n      this.username = null;\n      this.password = null;\n      this.sourceRoute = '1';\n      this.sourceRoute = this.route.snapshot.paramMap.get('type');\n    }\n    ngOnInit() {\n      // if user is set, populate it\n      this.username = this.route.snapshot.params['user'];\n    }\n    showError(errorMessage) {\n      this.snackBar.open(errorMessage, 'RETRY', {\n        duration: 2000\n      });\n    }\n    login() {\n      this._service.login(this.username, this.password, this.sourceRoute).subscribe(data => {\n        this._service.createUserDetails(data);\n        const userdata = JSON.parse(localStorage.getItem('userdata')) || null;\n        localStorage.setItem('userdata', JSON.stringify(userdata));\n        if (this._service.role === 'ADMIN') {\n          this.router.navigate(['home/admin'], {\n            relativeTo: this.route.parent\n          });\n        } else {\n          this.router.navigate(['home'], {\n            relativeTo: this.route.parent\n          });\n        }\n      }, err => {\n        console.log('Error ', err);\n        this.showError('Invalid credentials provided!');\n      });\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 12,\n      vars: 2,\n      consts: [[1, \"card\"], [\"center\", \"\"], [1, \"form\"], [1, \"full-width\"], [\"matInput\", \"\", \"name\", \"username\", \"placeholder\", \"Email Address\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"matInput\", \"\", \"name\", \"password\", \"placeholder\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [1, \"button-right\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"button\", 3, \"click\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-content\")(2, \"h3\", 1);\n          i0.ɵɵtext(3, \"DevLite App Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 2)(5, \"mat-form-field\", 3)(6, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"mat-form-field\", 3)(8, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n          i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_10_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵtext(11, \"Login\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n        }\n      },\n      dependencies: [i4.MatButton, i5.MatInput, i6.MatFormField, i7.MatCard, i7.MatCardContent, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i8.NgForm],\n      styles: [\"[_nghost-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:100vh}.card[_ngcontent-%COMP%]{width:300px;min-height:200px;padding:20px}.form[_ngcontent-%COMP%], .full-width[_ngcontent-%COMP%]{width:100%}.button[_ngcontent-%COMP%]{margin-top:20px}.button-left[_ngcontent-%COMP%]{position:absolute;bottom:20px;left:20px}.button-right[_ngcontent-%COMP%]{position:absolute;bottom:20px;right:20px}.logins[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}\"]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}