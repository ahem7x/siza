{"ast":null,"code":"import { EventEmitter, SimpleChanges } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nfunction ConfigitemComponent_mat_form_field_7_mat_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\nfunction ConfigitemComponent_mat_form_field_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 4);\n    i0.ɵɵlistener(\"selectionChange\", function ConfigitemComponent_mat_form_field_7_Template_mat_select_selectionChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.selectionChange($event));\n    })(\"valueChange\", function ConfigitemComponent_mat_form_field_7_Template_mat_select_valueChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.value = $event);\n    });\n    i0.ɵɵtemplate(4, ConfigitemComponent_mat_form_field_7_mat_option_4_Template, 2, 2, \"mat-option\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r0.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.options);\n  }\n}\nexport let ConfigitemComponent = /*#__PURE__*/(() => {\n  class ConfigitemComponent {\n    constructor() {\n      this.onSelect = new EventEmitter();\n    }\n    ngOnInit() {\n      this.calculateValue();\n    }\n    ngOnChanges(changes) {\n      this.calculateValue();\n    }\n    calculateValue() {\n      if ((!this.value || this.value === '') && (!this.options || this.options.includes('Prescriptive'))) {\n        this.value = 'Prescriptive';\n      }\n      if (!this.value) {\n        this._value = 'SELECT';\n      } else if (this.value === 'Prescriptive') {\n        if (this.perspectiveValue) {\n          this._value = this.perspectiveValue;\n        } else {\n          this._value = 'SELECT';\n        }\n      } else {\n        this._value = this.value;\n      }\n    }\n    selectionChange($event) {\n      this.onSelect.emit($event.value);\n    }\n    static #_ = this.ɵfac = function ConfigitemComponent_Factory(t) {\n      return new (t || ConfigitemComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ConfigitemComponent,\n      selectors: [[\"app-configitem\"]],\n      inputs: {\n        label: \"label\",\n        icon: \"icon\",\n        value: \"value\",\n        perspectiveValue: \"perspectiveValue\",\n        options: \"options\",\n        readOnly: \"readOnly\"\n      },\n      outputs: {\n        onSelect: \"onSelect\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 8,\n      vars: 4,\n      consts: [[1, \"item\"], [1, \"label\"], [1, \"value\"], [4, \"ngIf\"], [3, \"value\", \"selectionChange\", \"valueChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n      template: function ConfigitemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"span\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"mat-icon\");\n          i0.ɵɵtext(4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"span\", 2);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, ConfigitemComponent_mat_form_field_7_Template, 5, 3, \"mat-form-field\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.label);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.icon || \"menu_book\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx._value);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.readOnly);\n        }\n      },\n      styles: [\".item[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.item[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{margin-top:8px;color:gray}.item[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{font-weight:700;margin-top:4px;margin-bottom:4px}\"]\n    });\n  }\n  return ConfigitemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}