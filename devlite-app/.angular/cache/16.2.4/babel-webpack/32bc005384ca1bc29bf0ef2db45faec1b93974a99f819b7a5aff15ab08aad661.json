{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"myChart\"];\nexport let PiechartComponent = /*#__PURE__*/(() => {\n  class PiechartComponent {\n    constructor() {}\n    createChart() {\n      this.chart = new Chart(this.chartView.nativeElement, {\n        type: 'pie',\n        data: {\n          labels: this.labelSeries,\n          datasets: [{\n            data: this.dataSeries,\n            backgroundColor: ['rgba(51, 185, 109, 0.8)', 'rgba(33, 150, 243, 0.8)', 'rgba(255, 87, 34, 0.8)', 'rgba(255, 206, 86, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(55, 71, 79, 0.7)' // teal\n            ],\n\n            borderColor: '#FFFFFF',\n            hoverBorderColor: '#FFFFFF',\n            hoverBorderWidth: 1,\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          layout: {\n            padding: {\n              left: 30,\n              right: 30,\n              top: 10,\n              bottom: 10\n            }\n          },\n          legend: {\n            display: true,\n            position: 'bottom',\n            fullWidth: true,\n            labels: {\n              fontSize: 11,\n              fontFamily: 'Open Sans'\n            }\n          },\n          tooltips: {\n            bodyFontFamily: 'Open Sans',\n            bodyFontStyle: 'bold'\n          }\n        }\n      });\n    }\n    ngOnInit() {\n      this.createChart();\n    }\n    static #_ = this.ɵfac = function PiechartComponent_Factory(t) {\n      return new (t || PiechartComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PiechartComponent,\n      selectors: [[\"app-piechart\"]],\n      viewQuery: function PiechartComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartView = _t.first);\n        }\n      },\n      inputs: {\n        chartId: \"chartId\",\n        title: \"title\",\n        dataSeries: \"dataSeries\",\n        labelSeries: \"labelSeries\"\n      },\n      decls: 5,\n      vars: 2,\n      consts: [[1, \"wrapper\"], [3, \"id\"], [\"myChart\", \"\"]],\n      template: function PiechartComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"canvas\", 1, 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"id\", ctx.chartId);\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{width:100%;height:100%}.wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}\"]\n    });\n  }\n  return PiechartComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}