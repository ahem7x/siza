{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { trigger, query, stagger, transition, animateChild, animate, style } from '@angular/animations';\nimport { UserService } from 'src/app/services/user.service';\nexport const DELAY_TIME = 500;\nlet OrchestrateComponent = class OrchestrateComponent {\n  constructor(router, route, snackBar, service) {\n    this.router = router;\n    this.route = route;\n    this.snackBar = snackBar;\n    this.service = service;\n    this.dynamicData = {\n      preferredCollaborateFramework: '',\n      preferredServiceMgmtTool: '',\n      preferredCITool: '',\n      preferredSecStandard: '',\n      preferredSecurityTool: [],\n      preferredDeploymentTool: '',\n      preferredConfigTool: '',\n      preferredOrchestrationTool: '',\n      preferredTargetComputeEnvironment: '',\n      preferredReleaseTool: '',\n      preferredMonitoringTools: [],\n      preferredLang: '',\n      preferredLangVersion: '',\n      preferredLangBuildTool: '',\n      preferredProductBacklogTool: '',\n      preferredSprintBacklogTool: '',\n      preferredProjMgmtTool: '',\n      preferredSourceCodeManager: '',\n      preferredTestingTool: '',\n      envData: [],\n      //\n      preferredProductBacklogToolGF: true,\n      preferredSprintBacklogToolGF: true,\n      preferredProjMgmtToolGF: true,\n      preferredReleaseToolGF: true,\n      preferredServiceMgmtToolGF: true,\n      preferredCIToolGF: true,\n      preferredTargetComputeEnvironmentGF: true,\n      preferredOrchestrationToolGF: true,\n      preferredConfigToolGF: true,\n      preferredMonitoringTools0GF: true,\n      preferredMonitoringTools1GF: true,\n      preferredDeploymentToolGF: true,\n      preferredSourceCodeManagerGF: true,\n      preferredTestingToolGF: true,\n      preferredSecurityTool0GF: true,\n      preferredSecurityTool1GF: true,\n      preferredSecurityTool2GF: true,\n      preferredSecurityTool3GF: true\n    };\n    this.emails = 'shaik.basha35@wipro.com,syed.ahemed@wipro.com';\n    this.firstShow = true;\n    this.pipelineActivated = false;\n    this.service.defaultConfig.subscribe(_defaultData => {\n      this.defaultData = _defaultData;\n    });\n    this.role = this.service.role;\n  }\n  ngOnInit() {\n    if (this.pipelineActivated) {\n      //navigate to dashboard screen\n      this.router.navigate(['dashboard'], {\n        relativeTo: this.route.parent\n      });\n      return;\n    }\n    this.org = JSON.parse(localStorage.getItem('orgData')) || null;\n    console.log(this.org, this.defaultData);\n    this.devInstanceNo = this.org.devWorkbenchInfo.envConfig.devNoInstance;\n    this.devTshirtSize = this.org.devWorkbenchInfo.envConfig.devTShirtSize;\n    this.testInstanceNo = this.org.devWorkbenchInfo.envConfig.testNoInstance;\n    this.testTShirtSize = this.org.devWorkbenchInfo.envConfig.testTShirtSize;\n    this.stagingInstanceNo = this.org.devWorkbenchInfo.envConfig.stagNoInstance;\n    this.stagingTShirtSize = this.org.devWorkbenchInfo.envConfig.stagTShirtSize;\n    this.prodInstanceNo = this.org.devWorkbenchInfo.envConfig.prodNoInstance;\n    this.prodTShirtSize = this.org.devWorkbenchInfo.envConfig.prodTShirtSize;\n    let i = 0;\n    if (this.org.devWorkbenchInfo.envType.includes('Development') && this.devInstanceNo > 0) {\n      this.dynamicData.envData[i++] = 'Dev (' + this.devInstanceNo + ' Instances)';\n      this.dynamicData.envData[i++] = this.devTshirtSize;\n      this.dynamicData.envData[i++] = `Web: ${this.org.devWorkbenchInfo.bundle.web.name} (${this.org.devWorkbenchInfo.bundle.web.os})`;\n      this.dynamicData.envData[i++] = `App: ${this.org.devWorkbenchInfo.bundle.app.name} (${this.org.devWorkbenchInfo.bundle.app.os})`;\n      this.dynamicData.envData[i++] = `DB: ${this.org.devWorkbenchInfo.bundle.db.name} (${this.org.devWorkbenchInfo.bundle.web.db})`;\n    }\n    if (this.org.devWorkbenchInfo.envType.includes('Test') && this.testInstanceNo > 0) {\n      this.dynamicData.envData[i++] = 'Test (' + this.testInstanceNo + ' Instances)';\n      this.dynamicData.envData[i++] = this.testTShirtSize;\n      this.dynamicData.envData[i++] = `Web: ${this.org.devWorkbenchInfo.bundle.web.name} (${this.org.devWorkbenchInfo.bundle.web.os})`;\n      this.dynamicData.envData[i++] = `App: ${this.org.devWorkbenchInfo.bundle.app.name} (${this.org.devWorkbenchInfo.bundle.app.os})`;\n      this.dynamicData.envData[i++] = `DB: ${this.org.devWorkbenchInfo.bundle.db.name} (${this.org.devWorkbenchInfo.bundle.db.os})`;\n    }\n    if (this.org.devWorkbenchInfo.envType.includes('Staging') && this.stagingInstanceNo > 0) {\n      this.dynamicData.envData[i++] = 'Staging (' + this.stagingInstanceNo + ' Instances)';\n      this.dynamicData.envData[i++] = this.stagingTShirtSize;\n      this.dynamicData.envData[i++] = `Web: ${this.org.devWorkbenchInfo.bundle.web.name} (${this.org.devWorkbenchInfo.bundle.web.os})`;\n      this.dynamicData.envData[i++] = `App: ${this.org.devWorkbenchInfo.bundle.app.name} (${this.org.devWorkbenchInfo.bundle.app.os})`;\n      this.dynamicData.envData[i++] = `DB: ${this.org.devWorkbenchInfo.bundle.db.name} (${this.org.devWorkbenchInfo.bundle.db.os})`;\n    }\n    if (this.org.devWorkbenchInfo.envType.includes('Production') && this.prodInstanceNo > 0) {\n      this.dynamicData.envData[i++] = 'Prod (' + this.prodInstanceNo + ' Instances)';\n      this.dynamicData.envData[i++] = this.prodTShirtSize;\n      this.dynamicData.envData[i++] = `Web: ${this.org.devWorkbenchInfo.bundle.web.name} (${this.org.devWorkbenchInfo.bundle.web.os})`;\n      this.dynamicData.envData[i++] = `App: ${this.org.devWorkbenchInfo.bundle.app.name} (${this.org.devWorkbenchInfo.bundle.app.os})`;\n      this.dynamicData.envData[i++] = `DB: ${this.org.devWorkbenchInfo.bundle.db.name} (${this.org.devWorkbenchInfo.bundle.db.os})`;\n    }\n    // dynamic data\n    if (this.org.almInfo.catalogFramework && this.org.almInfo.catalogFramework !== 'Prescriptive') {\n      this.dynamicData.preferredCollaborateFramework = this.org.almInfo.catalogFramework;\n    } else {\n      this.dynamicData.preferredCollaborateFramework = this.defaultData.collaborateConfig.catalog.framework[0];\n    }\n    if (this.org.secureInfo.standard && this.org.secureInfo.standard !== 'Prescriptive') {\n      this.dynamicData.preferredSecStandard = this.org.secureInfo.standard;\n    } else {\n      this.dynamicData.preferredSecStandard = this.defaultData.secureConfig.catalog.standards[0];\n    }\n    if (this.org.devWorkbenchInfo.ciTool.value && this.org.devWorkbenchInfo.ciTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredCITool = this.org.devWorkbenchInfo.ciTool.value;\n    } else {\n      this.dynamicData.preferredCITool = this.defaultData.integrateConfig.catalog.ciTool[0];\n    }\n    //preferredSourceCodeManager\n    if (this.org.devWorkbenchInfo.sourceCodeManager.value && this.org.devWorkbenchInfo.sourceCodeManager.value !== 'Prescriptive') {\n      this.dynamicData.preferredSourceCodeManager = this.org.devWorkbenchInfo.sourceCodeManager.value;\n    } else {\n      this.dynamicData.preferredSourceCodeManager = this.defaultData.integrateConfig.sourceCodeManager[0];\n    }\n    //preferredSourceCodeManagerGF\n    if (this.org.devWorkbenchInfo.sourceCodeManager.deployment && this.org.devWorkbenchInfo.sourceCodeManager.deployment === 'BrownField') {\n      this.dynamicData.preferredSourceCodeManagerGF = false;\n    }\n    //preferredTestingTool\n    if (this.org.devWorkbenchInfo.testingTool.value && this.org.devWorkbenchInfo.testingTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredTestingTool = this.org.devWorkbenchInfo.testingTool.value;\n    } else {\n      this.dynamicData.preferredTestingTool = this.defaultData.integrateConfig.testingTool[0];\n    }\n    //preferredTestingToolGF\n    if (this.org.devWorkbenchInfo.testingTool.deployment && this.org.devWorkbenchInfo.testingTool.deployment === 'BrownField') {\n      this.dynamicData.preferredTestingToolGF = false;\n    }\n    //preferredCIToolGF\n    if (this.org.devWorkbenchInfo.ciTool.deployment && this.org.devWorkbenchInfo.ciTool.deployment === 'BrownField') {\n      this.dynamicData.preferredCIToolGF = false;\n    }\n    if (this.org.almInfo.serviceMgmtTool.value && this.org.almInfo.serviceMgmtTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredServiceMgmtTool = this.org.almInfo.serviceMgmtTool.value;\n    } else {\n      this.dynamicData.preferredServiceMgmtTool = this.defaultData.collaborateConfig.serviceMgmtTool[0];\n    }\n    //preferredServiceMgmtToolGF\n    if (this.org.almInfo.serviceMgmtTool.deployment && this.org.almInfo.serviceMgmtTool.deployment === 'BrownField') {\n      this.dynamicData.preferredServiceMgmtToolGF = false;\n    }\n    // sec types\n    if (this.org.secureInfo.sast.value && this.org.secureInfo.sast.value !== 'Prescriptive') {\n      this.dynamicData.preferredSecurityTool[0] = this.org.secureInfo.sast.value;\n    } else {\n      this.dynamicData.preferredSecurityTool[0] = this.defaultData.secureConfig.catalog.sast[0];\n    }\n    if (this.org.secureInfo.dast.value && this.org.secureInfo.dast.value !== 'Prescriptive') {\n      this.dynamicData.preferredSecurityTool[1] = this.org.secureInfo.dast.value;\n    } else {\n      this.dynamicData.preferredSecurityTool[1] = this.defaultData.secureConfig.catalog.dast[0];\n    }\n    if (this.org.secureInfo.raspv && this.org.secureInfo.rasp.value !== 'Prescriptive') {\n      this.dynamicData.preferredSecurityTool[2] = this.org.secureInfo.rasp.value;\n    } else {\n      this.dynamicData.preferredSecurityTool[2] = this.defaultData.secureConfig.catalog.rasp[0];\n    }\n    if (this.org.secureInfo.siem.value && this.org.secureInfo.siem.value !== 'Prescriptive') {\n      this.dynamicData.preferredSecurityTool[3] = this.org.secureInfo.siem.value;\n    } else {\n      this.dynamicData.preferredSecurityTool[3] = this.defaultData.secureConfig.catalog.siem[0];\n    }\n    if (this.org.secureInfo.sast.deployment && this.org.secureInfo.sast.deployment === 'BrownField') {\n      this.dynamicData.preferredSecurityTool0GF = false;\n    }\n    if (this.org.secureInfo.dast.deployment && this.org.secureInfo.dast.deployment === 'BrownField') {\n      this.dynamicData.preferredSecurityTool1GF = false;\n    }\n    if (this.org.secureInfo.rasp.deployment && this.org.secureInfo.rasp.deployment === 'BrownField') {\n      this.dynamicData.preferredSecurityTool2GF = false;\n    }\n    if (this.org.secureInfo.siem.deployment && this.org.secureInfo.siem.deployment === 'BrownField') {\n      this.dynamicData.preferredSecurityTool3GF = false;\n    }\n    if (this.org.deployInfo.orchestrationTool.value && this.org.deployInfo.orchestrationTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredOrchestrationTool = this.org.deployInfo.orchestrationTool.value;\n    } else {\n      this.dynamicData.preferredOrchestrationTool = this.defaultData.deployConfig.catalog.orchestrate[0];\n    }\n    //preferredOrchestrationToolGF\n    if (this.org.deployInfo.orchestrationTool.deployment && this.org.deployInfo.orchestrationTool.deployment === 'BrownField') {\n      this.dynamicData.preferredOrchestrationToolGF = false;\n    }\n    if (this.org.deployInfo.cloudType.value && this.org.deployInfo.cloudType.value !== 'Prescriptive') {\n      this.dynamicData.preferredTargetComputeEnvironment = this.org.deployInfo.cloudType.value;\n    } else {\n      this.dynamicData.preferredTargetComputeEnvironment = this.defaultData.deployConfig.catalog.cloudType[0];\n    }\n    //preferredTargetComputeEnvironmentGF\n    if (this.org.deployInfo.cloudType.deployment && this.org.deployInfo.cloudType.deployment === 'BrownField') {\n      this.dynamicData.preferredTargetComputeEnvironmentGF = false;\n    }\n    if (this.org.deployInfo.configMgmtTool.value && this.org.deployInfo.configMgmtTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredConfigTool = this.org.deployInfo.configMgmtTool.value;\n    } else {\n      this.dynamicData.preferredConfigTool = this.defaultData.deployConfig.catalog.configTool[0];\n    }\n    //preferredConfigToolGF\n    if (this.org.deployInfo.configMgmtTool.deployment && this.org.deployInfo.configMgmtTool.deployment === 'BrownField') {\n      this.dynamicData.preferredConfigToolGF = false;\n    }\n    // if bundle is selected\n    if (this.org.devWorkbenchInfo.bundle && this.org.devWorkbenchInfo.bundle.lang) {\n      this.dynamicData.preferredLang = this.org.devWorkbenchInfo.bundle.lang.name;\n      this.dynamicData.preferredLangBuildTool = this.org.devWorkbenchInfo.bundle.lang.buildTool;\n    } else {\n      // get from default values\n      this.dynamicData.preferredLang = this.defaultData.integrateConfig.bundle[0].lang.name;\n      this.dynamicData.preferredLangBuildTool = this.defaultData.integrateConfig.bundle[0].lang.buildTool;\n    }\n    if (this.org.deployInfo.deployTool.value && this.org.deployInfo.deployTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredDeploymentTool = this.org.deployInfo.deployTool.value;\n    } else {\n      this.dynamicData.preferredDeploymentTool = this.defaultData.deployConfig.catalog.deploy[0];\n    }\n    //preferredDeploymentToolGF\n    if (this.org.deployInfo.deployTool.deployment && this.org.deployInfo.deployTool.deployment === 'BrownField') {\n      this.dynamicData.preferredDeploymentToolGF = false;\n    }\n    if (this.org.almInfo.releaseMgmtTool.value && this.org.almInfo.releaseMgmtTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredReleaseTool = this.org.almInfo.releaseMgmtTool.value;\n    } else {\n      this.dynamicData.preferredReleaseTool = this.defaultData.collaborateConfig.releaseMgmtTool[0];\n    }\n    //preferredReleaseToolGF\n    if (this.org.almInfo.releaseMgmtTool.deployment && this.org.almInfo.releaseMgmtTool.deployment === 'BrownField') {\n      this.dynamicData.preferredReleaseToolGF = false;\n    }\n    if (this.org.almInfo.productBacklogTool.value && this.org.almInfo.productBacklogTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredProductBacklogTool = this.org.almInfo.productBacklogTool.value;\n    } else {\n      this.dynamicData.preferredProductBacklogTool = this.defaultData.collaborateConfig.productBacklogTool[0];\n    }\n    //preferredProductBacklogToolGF\n    if (this.org.almInfo.productBacklogTool.deployment && this.org.almInfo.productBacklogTool.deployment === 'BrownField') {\n      this.dynamicData.preferredProductBacklogToolGF = false;\n    }\n    if (this.org.almInfo.sprintBacklogTool.value && this.org.almInfo.sprintBacklogTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredSprintBacklogTool = this.org.almInfo.sprintBacklogTool.value;\n    } else {\n      this.dynamicData.preferredSprintBacklogTool = this.defaultData.collaborateConfig.sprintBacklogTool[0];\n    }\n    //preferredProductBacklogToolGF\n    if (this.org.almInfo.sprintBacklogTool.deployment && this.org.almInfo.sprintBacklogTool.deployment === 'BrownField') {\n      this.dynamicData.preferredSprintBacklogToolGF = false;\n    }\n    if (this.org.almInfo.projectMgmtTool.value && this.org.almInfo.projectMgmtTool.value !== 'Prescriptive') {\n      this.dynamicData.preferredProjMgmtTool = this.org.almInfo.projectMgmtTool.value;\n    } else {\n      this.dynamicData.preferredProjMgmtTool = this.defaultData.collaborateConfig.projectMgmtTool[0];\n    }\n    //preferredProjMgmtToolGF\n    if (this.org.almInfo.projectMgmtTool.deployment && this.org.almInfo.projectMgmtTool.deployment === 'BrownField') {\n      this.dynamicData.preferredProjMgmtToolGF = false;\n    }\n    // map two monitors\n    if (this.org.deployInfo.aimonitor.value && this.org.deployInfo.aimonitor.value !== 'Prescriptive') {\n      this.dynamicData.preferredMonitoringTools[0] = this.org.deployInfo.aimonitor.value;\n    } else {\n      this.dynamicData.preferredMonitoringTools[0] = this.defaultData.deployConfig.catalog.aimonitor;\n    }\n    //preferredMonitoringTools0GF\n    if (this.org.deployInfo.aimonitor.deployment && this.org.deployInfo.aimonitor.deployment === 'BrownField') {\n      this.dynamicData.preferredMonitoringTools0GF = false;\n    }\n    if (this.org.deployInfo.cmonitor.value && this.org.deployInfo.cmonitor.value !== 'Prescriptive') {\n      this.dynamicData.preferredMonitoringTools[1] = this.org.deployInfo.cmonitor.value;\n    } else {\n      this.dynamicData.preferredMonitoringTools[1] = this.defaultData.deployConfig.catalog.cmonitor;\n    }\n    //preferredMonitoringTools1GF\n    if (this.org.deployInfo.cmonitor.deployment && this.org.deployInfo.cmonitor.deployment === 'BrownField') {\n      this.dynamicData.preferredMonitoringTools1GF = false;\n    }\n  }\n  sleep(delay) {\n    const start = new Date().getTime();\n    while (new Date().getTime() < start + delay) {}\n  }\n  showError(errorMessage, action) {\n    this.snackBar.open(errorMessage, action, {\n      duration: 2000\n    });\n  }\n  closeAnimation(event) {\n    this.sleep(DELAY_TIME);\n    // this.firstShow = false;\n  }\n\n  showInstances() {\n    this.firstShow = false;\n  }\n  activatePipeline() {\n    if (this.service.role === 'ADMIN') {\n      // dont call the API yet\n      this.showError('Toolchain successfully deployeed!', 'OK');\n      setTimeout(() => {\n        this.service.logout();\n        this.router.navigate(['']);\n      }, 2000);\n      return;\n    }\n    this.service.proxyApi().subscribe(() => {\n      this.showError('Pipeline successfully activated!', 'OK');\n      this.pipelineActivated = true;\n      //navigate to dashboard screen\n      this.router.navigate(['dashboard'], {\n        relativeTo: this.route.parent\n      });\n    }, err => {\n      console.log('Error ', err);\n      if (err.error.code && err.error.code === -1) {\n        this.showError(`Unable to activate pipeline - ${err.error.message}.`, 'OK');\n      } else {\n        this.showError('Unable to activate pipeline. Please check server logs.', 'OK');\n      }\n    });\n  }\n  getEnvClass(i, envData) {\n    let styleClass = 'box env-' + i;\n    let m = Math.trunc((i - 1) / 5);\n    if (envData === '') {\n      m = -1;\n    }\n    if (i % 5 === 1) {\n      styleClass = styleClass + ' headingBox';\n    } else if (i % 5 === 2) {\n      styleClass = styleClass + ' tShirtBox';\n    } else {\n      switch (m) {\n        case -1:\n          styleClass = styleClass + ' emptyBox';\n          break;\n        case 0:\n          styleClass = styleClass + ' devBox';\n          break;\n        case 1:\n          styleClass = styleClass + ' testBox';\n          break;\n        case 2:\n          styleClass = styleClass + ' stagingBox';\n          break;\n        case 3:\n          styleClass = styleClass + ' prodBox';\n          break;\n      }\n    }\n    return styleClass;\n  }\n  getTop(i) {\n    const base = (window.innerHeight * 0.80 - this.dynamicData.envData.length * 25) / 2 - 20;\n    return base + i * 25 + 'px';\n  }\n};\nOrchestrateComponent = __decorate([Component({\n  selector: 'app-orchestrate',\n  templateUrl: './orchestrate.component.html',\n  styleUrls: ['./orchestrate.component.scss'],\n  animations: [\n  // nice stagger effect when showing existing elements\n  trigger('list', [transition(':enter', [\n  // child animation selector + stagger\n  query('@items', stagger(DELAY_TIME, animateChild()))])]), trigger('items', [\n  // cubic-bezier for a tiny bouncing feel\n  transition(':enter', [style({\n    transform: 'scale(0.5)',\n    opacity: 0\n  }), animate('1s cubic-bezier(.8,-0.6,0.2,1.5)', style({\n    transform: 'scale(1)',\n    opacity: 1\n  }))]), transition(':leave', [style({\n    transform: 'scale(1)',\n    opacity: 1,\n    height: '*'\n  }), animate('1s cubic-bezier(.8,-0.6,0.2,1.5)', style({\n    transform: 'scale(0.5)',\n    opacity: 0,\n    height: '0px',\n    margin: '0px'\n  }))])])]\n}), __metadata(\"design:paramtypes\", [Router, ActivatedRoute, typeof (_a = typeof MatSnackBar !== \"undefined\" && MatSnackBar) === \"function\" ? _a : Object, UserService])], OrchestrateComponent);\nexport { OrchestrateComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}